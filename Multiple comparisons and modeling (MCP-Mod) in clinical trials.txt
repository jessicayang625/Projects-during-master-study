install.packages(MCPMod)
install.packages(DoseFinding)
library(MCPMod)
library(DoseFinding)

#dose_res - data.frame(dose = c(0, 2.5, 5, 10, 20, 50, 100, 200), resp = c(9.8, 12.5, 11.4, 25.4, 19, 21.5, 23.7, 36.2))

### Emax model ###
#e0 = dose_res$resp[1]
#eMax = dose_res$resp[8] - dose_res$resp[1]
#ed50 = (dose_res$resp[8] - dose_res$resp[1])  2
#y_emax = emax(dose_res$dose, e0, eMax, ed50)

### Quadratic model
#fit - lm(dose_res$resp ~ dose_res$dose +  I(dose_res$dose^2) , data=dose_res)
#e0 =  summary(fit)$ coeff[1,1]
#b1 =  summary(fit)$ coeff[2,1]
#b2 =  summary(fit)$ coeff[3,1]
#y_quadratic = quadratic(dose_res$dose, e0, b1, b2)
#par(mfrow=c(1,2))
#plot(dose_res$dose, dose_res$resp, ylim = c(0, 50), pch = 20, xlab = Dose (mg), 
#     ylab = Percentage of pain-free patients, main=Emax model)
#lines(dose_res$dose, y_emax , ylim = c(0, 50), pch = 20, xlab = Dose (mg), 
#     ylab = Percentage of pain-free patients,type=l, col=red)

#plot(dose_res$dose, dose_res$resp, ylim = c(0, 50), pch = 20, xlab = Dose (mg), 
#     ylab = Percentage of pain-free patients, main=Quadratic model)
#lines(dose_res$dose, y_quadratic , ylim = c(0, 50), pch = 20, xlab = Dose (mg), 
#      ylab = Percentage of pain-free patients,type=l, col=red)
#dev.copy2pdf(device = quartz, file = UsersYeonilDesktopdose.pdf)


## logistic
defBnds(mD=200)


data(migraine)
PFrate - migraine$painfreemigraine$ntrt
doseVec - migraine$dose
doseVecFac - as.factor(migraine$dose)
## fit logistic regression with dose as factor
fitBin - glm(PFrate~doseVecFac-1, family = binomial,
              weights = migraine$ntrt)
drEst - coef(fitBin)
vCov - vcov(fitBin)

## now fit an Emax model (on logit scale)
gfit - fitMod(doseVec, drEst, S=vCov, model = emax, bnds = c(0,100),
               type = general)
## model fit on logit scale
plot(gfit, plotData = meansCI, CI = TRUE, ylab =coefficients, 
     main=Emax model)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultemax_logit.pdf)


## model on probability scale
logitPred - predict(gfit, predType =ls-means, doseSeq = 0200,
                     se.fit=TRUE)
plot (data$dose, data$respmigraine$ntrt, pch=1, col=blue, 
      ylim = c(0, 0.5), ylab = Probability of being painfree, 
      xlab = Dose(mg), main=Emax model on probability scale)

lines(0200, 1(1+exp(-logitPred$fit)), type = l)
LB - logitPred$fit-qnorm(0.975)logitPred$se.fit
UB - logitPred$fit+qnorm(0.975)logitPred$se.fit
lines(0200, 1(1+exp(-LB)), col=red, lty=2)
lines(0200, 1(1+exp(-UB)), col=red, lty=2)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultemax.pdf)


## now fit an quadratic model
gfit_quad - fitMod(doseVec, drEst, S=vCov, model = quadratic, bnds = c(0,100),
                    type = general)
plot(gfit_quad, plotData = meansCI, CI = TRUE, xlab=Doses,
     ylab =coefficients, 
     main=Quadratic model)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultquad_logit.pdf)

## model on probability scale
logitPred - predict(gfit_quad, predType =ls-means, doseSeq = 0200,
                     se.fit=TRUE)
plot (data$dose, data$respmigraine$ntrt, pch=1, col=blue, 
      ylim = c(0, 0.5), ylab = Probability of being painfree, 
      xlab = Dose(mg), main=Quadratic model on probability scale)
lines(0200, 1(1+exp(-logitPred$fit)), type = l)
LB - logitPred$fit-qnorm(0.975)logitPred$se.fit
UB - logitPred$fit+qnorm(0.975)logitPred$se.fit
lines(0200, 1(1+exp(-LB)), col=red, lty=2)
lines(0200, 1(1+exp(-UB)), col=red, lty=2)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultquad.pdf)

##logistic 
gfit_logit - fitMod(doseVec, drEst, S=vCov, model = logistic, bnds = rbind(c(0.2,300),c(2,100)),
               type = general)
plot(gfit_logit, plotData = meansCI, CI = TRUE, xlab=Doses,
     ylab =coefficients, 
     main=Logistic model)

##beta_mod
gfit_beta - fitMod(doseVec, drEst, S=vCov, model = betaMod, bnds = rbind(c(0.05,4),c(0.05,4)),
                     type = general)

##beta_mod
gfit_expon - fitMod(doseVec, drEst, S=vCov, model = exponential, bnds = c(20, 400),
                    type = general)
plot(gfit_expon, plotData = meansCI, CI = TRUE, xlab=Doses,
     ylab =coefficients, 
     main=exponential model)


## calculate doses giving an improvement of 0.3 over placebo
delta = -2.038e-05 abs(9.960e-03)

fmodels - Mods(emax = 1.387, 
                exponential = 400,
                quadratic = delta, 
                logistic = c(2.626,71.23), 
                betaMod = c(0.2918, 0.0500),
                doses = c(0,2.5,5,10,20,50,100,200), placEff=0, maxEff=0.4,
                addArgs = list(scal=200) )
MM - MCPMod(doseVec, drEst, S=vCov, models = fmodels, 
     type = general, Delta=0.2, critV=2.31,  selModel=aveAIC)

ls(MM)
MM$selMod
MM$doseEst
MM$doseType
MM$MCTtest
MM$modcrit


sq - seq(0,200,length=100)
pred - predict(MM, doseSeq=sq, predType= ls-means)
modWeights - MM$selMod

## model averaged dose-estimate
TDEst - MM$doseEst%%modWeights

dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultemax_quad.pdf)



# (1) Emax model 
# delta is the clinical relevance 
doses - c(0,2.5,5,10,20,50,100,200)

TD(fmodels, Delta=0.3, TDtype = discrete, doses=doses)
TD(fmodels, Delta=0.3, TDtype = continuous, doses=doses)

TD(fmodels, Delta=0.2, TDtype = discrete, doses=doses)
TD(fmodels, Delta=0.2, TDtype = continuous, doses=doses)

TD(fmodels, Delta=0.1, TDtype = discrete, doses=doses)
TD(fmodels, Delta=0.1, TDtype = continuous, doses=doses)

plot(fmodels, plotTD = TRUE, Delta = 0.3)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultTD_30.pdf)

plot(fmodels, plotTD = TRUE, Delta = 0.2)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultED_20.pdf)

plot(fmodels, plotTD = TRUE, Delta = 0.1)
dev.copy2pdf(device = quartz, file = UsersYeonilDesktopconsulting resultED_10.pdf)




## doses giving 50% of the maximum effect
ED(fmodels, p=0.4)
ED(fmodels, p=0.4, EDtype = discrete, doses=doses)
plot(fmodels, type = ED, p=0.5)

ED(fmodels, p=0.5)
ED(fmodels, p=0.5, EDtype = discrete, doses=doses)

mods2 - list(linear = NULL, emax = c(0.05, 0.2), betaMod = c(0.5, 1),logistic = matrix(c(0.25, 0.7, 0.09, 0.06), byrow = FALSE, nrow = 2))
plot(mods2)

